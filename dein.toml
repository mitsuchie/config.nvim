[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'w0ng/vim-hybrid'
hook_add = '''
  augroup myvimrc
    autocmd colorscheme hybrid hi LineNr     ctermfg=244 guifg=#979ba1
    autocmd colorscheme hybrid hi CursorLine ctermbg=237 guibg=#383a3e
  augroup END
'''

[[plugins]]
repo = 'Shougo/denite.nvim'
hook_add = '''
  call denite#custom#map('insert', '<C-p>', '<denite:move_to_previous_line>', 'noremap')
  call denite#custom#map('insert', '<C-n>', '<denite:move_to_next_line>', 'noremap')
  call denite#custom#map('insert', '<Up>', '<denite:move_to_previous_line>', 'noremap')
  call denite#custom#map('insert', '<Down>', '<denite:move_to_next_line>', 'noremap')
  call denite#custom#map('insert', '<C-o>', '<denite:do_action:tabopen>', 'noremap')
  call denite#custom#map('insert', '<C-l>', '<denite:do_action:vsplit>', 'noremap')
  nnoremap <silent> ,f :<C-u>Denite file  file_mru<CR>
'''

[[plugins]]
repo = 'Shougo/neomru.vim'

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
  let g:lightline = {
  \   'colorscheme': 'wombat',
  \   'subseparator': { 'left': '>', 'right': '<' },
  \   'separator': { 'left': "\ue0b0", 'right': "\ue0b2" }
  \ }
'''

[[plugins]]
repo = 'kana/vim-submode'
hook_add = '''
  let g:submode_timeout = 0
  let g:submode_keep_leaving_key = 1
  let g:submode_keyseqs_to_leave = ['s', 'q']

  function! RegisterSubmode(name, mode, enter, map, key)
    call submode#enter_with(a:name, a:mode, '', a:enter, a:key)
    call submode#map(a:name, a:mode, '', a:map, a:key)
  endfunction

  try
    call RegisterSubmode('resizex', 'n', 'sdl', 'l', '<C-w>>')
    call RegisterSubmode('resizex', 'n', 'sdh', 'h', '<C-w><')
    call RegisterSubmode('resizey', 'n', 'sdj', 'j', '<C-w>+')
    call RegisterSubmode('resizey', 'n', 'sdk', 'k', '<C-w>-')
    call RegisterSubmode('move', 'nv', 'sj', 'j', '5j')
    call RegisterSubmode('move', 'nv', 'sk', 'k', '5k')
  catch
  endtry
'''

# [[plugins]]
# repo = 'thinca/vim-fontzoom'

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'osyo-manga/vim-brightest'
hook_add = '''
  let g:brightest#highlight = { 'group' : 'BrightestUnderline' }
'''

[[plugins]]
repo = 'AndrewRadev/switch.vim'
hook_add = """
  nnoremap - :<C-u>Switch<CR>
  let g:switch_custom_definitions = [{ '''\(.\{-}\)''': '"\1"', '"\(.\{-}\)"': '''\1'''}]
"""

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
  let g:quickrun_config = {
  \  '_' : {
  \    'outputter': 'multi:buffer:quickfix',
  \    'outputter/quickfix/open_cmd' : '',
  \    'hook/time/enable': 1,
  \    'hook/to_unix_line/enable': 1,
  \    'hook/santi_pinch/enable': 1,
  \    'hook/output_encode/encoding': 'utf-8',
  \    'hook/quickfix_replate_tempname_to_bufnr/enable_exit': 1,
  \    'hook/quickfix_replate_tempname_to_bufnr/priority_exit': -10,
  \    'hook/close_quickfix/enable_success': 1,
  \    'hook/close_quickfix/enable_hook_loaded': 1,
  \    'hook/qfsigns_update/enable_exit':   1,
  \    'hook/qfsigns_update/priority_exit': 3,
  \  },
  \}
'''

[[plugins]]
repo = 'osyo-manga/shabadou.vim'
on_source = ['vim-quickrun']
hook_source = '''
  call quickrun#module#register(shabadou#make_quickrun_hook_anim(
  \ 'santi_pinch', ['＼(・ω・＼)　SAN値！', '　(／・ω・)／ピンチ！'], 6), 1)
'''

